<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/components/Landing.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Landing.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import {useState} from &quot;react&quot;;&#10;import Confetti from &quot;react-confetti&quot;;&#10;import Header from &quot;@/components/landing/Header&quot;;&#10;import Hero from &quot;@/components/landing/Hero&quot;;&#10;import About from &quot;@/components/landing/About&quot;;&#10;import Projects from &quot;@/components/landing/Projects&quot;;&#10;import Contact from &quot;@/components/landing/Contact&quot;;&#10;&#10;export default function Landing() {&#10;    const [recycleConfetti, setRecycleConfetti] = useState(false);&#10;    const [showConfetti, setShowConfetti] = useState(false);&#10;    const [imageSrc, setImageSrc] = useState(&quot;/statics/myface.jpg&quot;);&#10;&#10;    function handleNameClick() {&#10;        setShowConfetti(true);&#10;        setRecycleConfetti(true);&#10;&#10;        setTimeout(() =&gt; setRecycleConfetti(false), 500);&#10;    }&#10;&#10;    function handleImageClick() {&#10;        setImageSrc((prevSrc) =&gt;&#10;            prevSrc === &quot;/statics/myface.jpg&quot; ? &quot;/statics/otherimage.png&quot; : &quot;/statics/myface.jpg&quot;&#10;        );&#10;    }&#10;&#10;    const showHobbies = imageSrc !== &quot;/statics/myface.jpg&quot;;&#10;&#10;    return (&#10;        &lt;&gt;&#10;            &lt;div id={&quot;home&quot;} className=&quot;flex flex-col min-h-[100dvh] justify-center mx-auto items-center dynbg&quot;&gt;&#10;                {showConfetti &amp;&amp; (&#10;                    &lt;Confetti&#10;                        width={typeof window !== &quot;undefined&quot; ? window.innerWidth - 17 : 0}&#10;                        height={typeof window !== &quot;undefined&quot; ? window.innerHeight + 100 : 0}&#10;                        recycle={recycleConfetti}&#10;                        numberOfPieces={100}&#10;                    /&gt;&#10;                )}&#10;&#10;                &lt;Header/&gt;&#10;&#10;                &lt;main className=&quot;flex-col space-y-96 mx-auto w-full px-6 items-center max-w-5xl&quot;&gt;&#10;                    &lt;section className=&quot;w-full py-12 sm:py-0 md:py-24 lg:py-32 xl:py-48 mb-96&quot;&gt;&#10;                        &lt;Hero onNameClick={handleNameClick}/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id=&quot;about&quot;&#10;                             className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48 mb-48&quot;&gt;&#10;                        &lt;About imageSrc={imageSrc} showHobbies={showHobbies} onImageClick={handleImageClick}/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id=&quot;projects&quot; className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48&quot;&gt;&#10;                        &lt;Projects/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id={&quot;contact&quot;}&#10;                             className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48 mb-48&quot;&gt;&#10;                        &lt;Contact/&gt;&#10;                    &lt;/section&gt;&#10;                &lt;/main&gt;&#10;            &lt;/div&gt;&#10;        &lt;/&gt;&#10;    )&#10;}" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import Header from &quot;@/components/landing/Header&quot;;&#10;import Hero from &quot;@/components/landing/Hero&quot;;&#10;import About from &quot;@/components/landing/About&quot;;&#10;import Projects from &quot;@/components/landing/Projects&quot;;&#10;import Contact from &quot;@/components/landing/Contact&quot;;&#10;&#10;export default function Landing() {&#10;    return (&#10;        &lt;&gt;&#10;            &lt;div id={&quot;home&quot;} className=&quot;flex flex-col min-h-[100dvh] justify-center mx-auto items-center dynbg&quot;&gt;&#10;                &lt;Header/&gt;&#10;&#10;                &lt;main className=&quot;flex-col space-y-96 mx-auto w-full px-6 items-center max-w-5xl&quot;&gt;&#10;                    &lt;section className=&quot;w-full py-12 sm:py-0 md:py-24 lg:py-32 xl:py-48 mb-96&quot;&gt;&#10;                        &lt;Hero/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id=&quot;about&quot;&#10;                             className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48 mb-48&quot;&gt;&#10;                        &lt;About/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id=&quot;projects&quot; className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48&quot;&gt;&#10;                        &lt;Projects/&gt;&#10;                    &lt;/section&gt;&#10;&#10;                    &lt;section id={&quot;contact&quot;}&#10;                             className=&quot;flex flex-col space-y-5 w-full py-12 md:py-24 lg:py-32 xl:py-48 mb-48&quot;&gt;&#10;                        &lt;Contact/&gt;&#10;                    &lt;/section&gt;&#10;                &lt;/main&gt;&#10;            &lt;/div&gt;&#10;        &lt;/&gt;&#10;    )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/About.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/About.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import { Avatar, AvatarImage } from &quot;@/components/ui/avatar&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import LinkCustom from &quot;@/components/landing/LinkCustom&quot;;&#10;import ExpandableCard from &quot;@/components/landing/ExpandableCard&quot;;&#10;import contentData from &quot;@/data/content.json&quot;;&#10;&#10;export default function About() {&#10;  const [imageSrc, setImageSrc] = useState(&quot;/statics/myface.jpg&quot;);&#10;  const showHobbies = imageSrc !== &quot;/statics/myface.jpg&quot;;&#10;&#10;  function handleImageClick() {&#10;    setImageSrc((prevSrc) =&gt;&#10;      prevSrc === &quot;/statics/myface.jpg&quot; ? &quot;/statics/otherimage.png&quot; : &quot;/statics/myface.jpg&quot;&#10;    );&#10;  }&#10;&#10;  function goBackToProfessional() {&#10;    setImageSrc(&quot;/statics/myface.jpg&quot;);&#10;  }&#10;&#10;  const aboutMeNormal = (&#10;    &lt;p className=&quot;inline-block text-muted-foreground md:text-xl sm:text-sm flex-1 tracking-tighter&quot;&gt;&#10;      {contentData.aboutMe.normal.intro}{&quot; &quot;}&#10;      &lt;LinkCustom&#10;        href={contentData.aboutMe.normal.copilotLink.href}&#10;        label={contentData.aboutMe.normal.copilotLink.label}&#10;      /&gt;&#10;      {contentData.aboutMe.normal.description}&#10;      &lt;br /&gt;&#10;      &lt;br /&gt;&#10;      {contentData.aboutMe.normal.hobbiesIntro}{&quot; &quot;}&#10;      &lt;span className=&quot;text-pink-400&quot;&gt;{contentData.aboutMe.normal.clickPrompt}&lt;/span&gt;{&quot; &quot;}&#10;      {contentData.aboutMe.normal.closing}&#10;    &lt;/p&gt;&#10;  );&#10;&#10;  const aboutHobbies = (&#10;    &lt;div className=&quot;flex-1&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;        &lt;h2 className=&quot;md:text-2xl sm:text-lg font-bold tracking-tighter&quot;&gt;&#10;          {contentData.aboutMe.hobbies.title}&#10;        &lt;/h2&gt;&#10;        &lt;Button variant=&quot;ghost&quot; size=&quot;sm&quot; onClick={goBackToProfessional} className=&quot;text-pink-500 hover:text-pink-600&quot;&gt;&#10;          ← back&#10;        &lt;/Button&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;space-y-3&quot;&gt;&#10;        {contentData.aboutMe.hobbies.items.map((item, index) =&gt; (&#10;          &lt;ExpandableCard key={index} title={item.category}&gt;&#10;            {item.description}&#10;          &lt;/ExpandableCard&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;flex&quot;&gt;&#10;        &lt;h1 className=&quot;md:text-3xl sm:text-xl font-extrabold tracking-tighter text-left&quot;&gt;who am i?&lt;/h1&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;flex justify-center&quot;&gt;&#10;        &lt;div className=&quot;grid lg:grid-cols-[3fr_1fr] sm:grid-cols-1 items-center gap-4 w-full&quot;&gt;&#10;          {showHobbies ? aboutHobbies : aboutMeNormal}&#10;          &lt;Avatar className=&quot;md:w-48 md:h-48 sm:h-32 sm:w-32 m-auto scale-105 hover:scale-110 transition-all my-2&quot;&gt;&#10;            &lt;div onClick={handleImageClick} className=&quot;cursor-pointer&quot;&gt;&#10;              &lt;AvatarImage src={imageSrc} /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Avatar&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import { Avatar, AvatarImage } from &quot;@/components/ui/avatar&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import LinkCustom from &quot;@/components/landing/LinkCustom&quot;;&#10;import ExpandableCard from &quot;@/components/landing/ExpandableCard&quot;;&#10;import contentData from &quot;@/data/content.json&quot;;&#10;&#10;export default function About() {&#10;  const [imageSrc, setImageSrc] = useState(&quot;/statics/myface.jpg&quot;);&#10;  const showHobbies = imageSrc !== &quot;/statics/myface.jpg&quot;;&#10;&#10;  function handleImageClick() {&#10;    setImageSrc((prevSrc) =&gt;&#10;      prevSrc === &quot;/statics/myface.jpg&quot; ? &quot;/statics/otherimage.png&quot; : &quot;/statics/myface.jpg&quot;&#10;    );&#10;  }&#10;&#10;  function goBackToProfessional() {&#10;    setImageSrc(&quot;/statics/myface.jpg&quot;);&#10;  }&#10;&#10;  const aboutMeNormal = (&#10;    &lt;p className=&quot;inline-block text-muted-foreground md:text-xl sm:text-sm flex-1 tracking-tighter&quot;&gt;&#10;      {contentData.aboutMe.normal.intro}{&quot; &quot;}&#10;      &lt;LinkCustom&#10;        href={contentData.aboutMe.normal.copilotLink.href}&#10;        label={contentData.aboutMe.normal.copilotLink.label}&#10;      /&gt;&#10;      {contentData.aboutMe.normal.description}&#10;      &lt;br /&gt;&#10;      &lt;br /&gt;&#10;      {contentData.aboutMe.normal.hobbiesIntro}{&quot; &quot;}&#10;      &lt;span className=&quot;text-pink-400&quot;&gt;{contentData.aboutMe.normal.clickPrompt}&lt;/span&gt;{&quot; &quot;}&#10;      {contentData.aboutMe.normal.closing}&#10;    &lt;/p&gt;&#10;  );&#10;&#10;  const aboutHobbies = (&#10;    &lt;div className=&quot;flex-1&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;        &lt;h2 className=&quot;md:text-2xl sm:text-lg font-bold tracking-tighter&quot;&gt;&#10;          {contentData.aboutMe.hobbies.title}&#10;        &lt;/h2&gt;&#10;        &lt;Button variant=&quot;ghost&quot; size=&quot;sm&quot; onClick={goBackToProfessional} className=&quot;text-pink-500 hover:text-pink-600&quot;&gt;&#10;          ← back&#10;        &lt;/Button&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;space-y-1&quot;&gt;&#10;        {contentData.aboutMe.hobbies.items.map((item, index) =&gt; (&#10;          &lt;ExpandableCard key={index} title={item.category}&gt;&#10;            {item.description}&#10;          &lt;/ExpandableCard&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;flex&quot;&gt;&#10;        &lt;h1 className=&quot;md:text-3xl sm:text-xl font-extrabold tracking-tighter text-left&quot;&gt;who am i?&lt;/h1&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;flex justify-center&quot;&gt;&#10;        &lt;div className=&quot;grid lg:grid-cols-[3fr_1fr] sm:grid-cols-1 items-center gap-4 w-full&quot;&gt;&#10;          {showHobbies ? aboutHobbies : aboutMeNormal}&#10;          &lt;Avatar className=&quot;md:w-48 md:h-48 sm:h-32 sm:w-32 m-auto scale-105 hover:scale-110 transition-all my-2&quot;&gt;&#10;            &lt;div onClick={handleImageClick} className=&quot;cursor-pointer&quot;&gt;&#10;              &lt;AvatarImage src={imageSrc} /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Avatar&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/Contact.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/Contact.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import { Avatar, AvatarFallback, AvatarImage } from &quot;@/components/ui/avatar&quot;;&#10;&#10;export default function Contact() {&#10;  const [copySuccess, setCopySuccess] = useState(false);&#10;  const [copyError, setCopyError] = useState(false);&#10;&#10;  function handleCopyClick() {&#10;    const textToCopy = &quot;ryanzhang@outlook.com&quot;;&#10;    navigator.clipboard&#10;      .writeText(textToCopy)&#10;      .then(() =&gt; {&#10;        setCopySuccess(true);&#10;        setTimeout(() =&gt; setCopySuccess(false), 2000);&#10;      })&#10;      .catch(() =&gt; {&#10;        setCopyError(true);&#10;        setTimeout(() =&gt; setCopyError(false), 2000);&#10;      });&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;flex justify-center m-0&quot;&gt;&#10;        &lt;h1 className=&quot;text-3xl font-extrabold tracking-tighter&quot;&gt;contact me&lt;/h1&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;flex justify-center m-0 relative&quot;&gt;&#10;        &lt;div className=&quot;grid grid-cols-[1fr_6fr] items-center&quot;&gt;&#10;          &lt;Avatar className=&quot;w-12 h-12&quot;&gt;&#10;            &lt;AvatarImage src=&quot;/statics/pfp.png&quot; /&gt;&#10;            &lt;AvatarFallback&gt;Me&lt;/AvatarFallback&gt;&#10;          &lt;/Avatar&gt;&#10;          &lt;p className=&quot;inline-block text-muted-foreground md:text-lg flex-1&quot;&gt;&#10;            inquiries? email me at:&#10;            &lt;&gt; &lt;/&gt;&#10;            &lt;a&#10;              onClick={handleCopyClick}&#10;              className={&#10;                &quot;underline tracking-tight hover:tracking-normal hover:cursor-pointer transition-all hover:text-pink-500&quot;&#10;              }&#10;            &gt;&#10;              ryanzhang@outlook.com&#10;            &lt;/a&gt;{&quot; &quot;}&#10;            or find me on linkedin!&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        {copySuccess &amp;&amp; (&#10;          &lt;div className=&quot;absolute top-full mt-2 bg-green-300 text-gray-600 px-4 py-2 rounded-lg shadow-lg animate-in fade-in-0 slide-in-from-top-2 duration-300&quot;&gt;&#10;            ✓ Email copied to clipboard!&#10;          &lt;/div&gt;&#10;        )}&#10;&#10;        {copyError &amp;&amp; (&#10;          &lt;div className=&quot;absolute top-full mt-2 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg animate-in fade-in-0 slide-in-from-top-2 duration-300&quot;&gt;&#10;            ✗ Failed to copy email&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/ExpandableCard.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/ExpandableCard.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import * as React from &quot;react&quot;;&#10;import { cn } from &quot;@/lib/utils&quot;;&#10;&#10;export default function ExpandableCard({&#10;  title,&#10;  children,&#10;  defaultOpen = false,&#10;}: {&#10;  title: string;&#10;  children: React.ReactNode;&#10;  defaultOpen?: boolean;&#10;}) {&#10;  const [open, setOpen] = React.useState(defaultOpen);&#10;&#10;  return (&#10;    &lt;div className=&quot;rounded-2xl border border-gray-200 bg-gray-100/70 hover:bg-gray-100 transition-colors&quot;&gt;&#10;      &lt;button&#10;        type=&quot;button&quot;&#10;        onClick={() =&gt; setOpen((o) =&gt; !o)}&#10;        className=&quot;w-full flex items-center justify-between p-4&quot;&#10;        aria-expanded={open}&#10;      &gt;&#10;        &lt;span className=&quot;font-semibold tracking-tight text-gray-800&quot;&gt;{title}&lt;/span&gt;&#10;        &lt;svg&#10;          viewBox=&quot;0 0 20 20&quot;&#10;          fill=&quot;none&quot;&#10;          xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;          className={cn(&quot;h-4 w-4 text-gray-600 transition-transform&quot;, open ? &quot;rotate-180&quot; : &quot;rotate-0&quot;)}&#10;          aria-hidden=&quot;true&quot;&#10;        &gt;&#10;          &lt;path d=&quot;M6 8l4 4 4-4&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; /&gt;&#10;        &lt;/svg&gt;&#10;      &lt;/button&gt;&#10;      &lt;div&#10;        className={cn(&#10;          &quot;grid transition-all duration-300 ease-in-out&quot;,&#10;          open ? &quot;grid-rows-[1fr] opacity-100&quot; : &quot;grid-rows-[0fr] opacity-0&quot;&#10;        )}&#10;      &gt;&#10;        &lt;div className=&quot;overflow-hidden px-4 pb-4 text-sm text-muted-foreground&quot;&gt;{children}&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import * as React from &quot;react&quot;;&#10;import { cn } from &quot;@/lib/utils&quot;;&#10;&#10;export default function ExpandableCard({&#10;  title,&#10;  children,&#10;  defaultOpen = false,&#10;}: {&#10;  title: string;&#10;  children: React.ReactNode;&#10;  defaultOpen?: boolean;&#10;}) {&#10;  const [open, setOpen] = React.useState(defaultOpen);&#10;&#10;  return (&#10;    &lt;div&gt;&#10;      &lt;button&#10;        type=&quot;button&quot;&#10;        onClick={() =&gt; setOpen((o) =&gt; !o)}&#10;        className=&quot;w-full flex items-center justify-between py-3 text-left&quot;&#10;        aria-expanded={open}&#10;      &gt;&#10;        &lt;span className=&quot;font-semibold tracking-tight text-gray-800&quot;&gt;{title}&lt;/span&gt;&#10;        &lt;svg&#10;          viewBox=&quot;0 0 20 20&quot;&#10;          fill=&quot;none&quot;&#10;          xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;          className={cn(&quot;h-4 w-4 text-gray-600 transition-transform&quot;, open ? &quot;rotate-180&quot; : &quot;rotate-0&quot;)}&#10;          aria-hidden=&quot;true&quot;&#10;        &gt;&#10;          &lt;path d=&quot;M6 8l4 4 4-4&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; /&gt;&#10;        &lt;/svg&gt;&#10;      &lt;/button&gt;&#10;      &lt;div&#10;        className={cn(&#10;          &quot;grid transition-all duration-300 ease-in-out&quot;,&#10;          open ? &quot;grid-rows-[1fr] opacity-100&quot; : &quot;grid-rows-[0fr] opacity-0&quot;&#10;        )}&#10;      &gt;&#10;        &lt;div&#10;          className={cn(&#10;            &quot;overflow-hidden text-sm text-muted-foreground&quot;,&#10;            open ? &quot;py-3&quot; : &quot;py-0&quot;&#10;          )}&#10;        &gt;&#10;          {children}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/Header.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/Header.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { Avatar, AvatarFallback, AvatarImage } from &quot;@/components/ui/avatar&quot;;&#10;import NavLink from &quot;@/components/landing/NavLink&quot;;&#10;&#10;export default function Header() {&#10;  return (&#10;    &lt;header className=&quot;w-full sticky top-0 bg-gray-50 bg-opacity-0 z-10&quot;&gt;&#10;      &lt;div className=&quot;px-6 py-6 h-14 flex items-center justify-between max-w-xl mx-auto&quot;&gt;&#10;        &lt;nav className=&quot;flex gap-4 sm:gap-6 items-center&quot;&gt;&#10;          &lt;NavLink href=&quot;#home&quot; label=&quot;home&quot; /&gt;&#10;          &lt;NavLink href=&quot;#about&quot; label=&quot;about&quot; /&gt;&#10;          &lt;NavLink href=&quot;#projects&quot; label=&quot;projects&quot; /&gt;&#10;          &lt;NavLink href=&quot;#contact&quot; label=&quot;contact&quot; /&gt;&#10;        &lt;/nav&gt;&#10;        &lt;div className=&quot;flex gap-3 justify-between items-center ml-auto&quot;&gt;&#10;          &lt;a href=&quot;https://linkedin.com/in/rmzhang&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&#10;            &lt;Avatar className=&quot;size-8 scale-100 hover:scale-110 transition-all&quot;&gt;&#10;              &lt;AvatarImage src=&quot;/statics/inlogo.png&quot; /&gt;&#10;              &lt;AvatarFallback&gt;&lt;/AvatarFallback&gt;&#10;            &lt;/Avatar&gt;&#10;          &lt;/a&gt;&#10;&#10;          &lt;a href=&quot;https://github.com/rzhang57&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;&#10;            &lt;Avatar className=&quot;scale-100 hover:scale-110 transition-all&quot;&gt;&#10;              &lt;AvatarImage src=&quot;/statics/gitlogo.png&quot; /&gt;&#10;              &lt;AvatarFallback&gt;&lt;/AvatarFallback&gt;&#10;            &lt;/Avatar&gt;&#10;          &lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/header&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/Hero.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/Hero.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import Confetti from &quot;react-confetti&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export default function Hero() {&#10;  const [recycleConfetti, setRecycleConfetti] = useState(false);&#10;  const [showConfetti, setShowConfetti] = useState(false);&#10;&#10;  function handleNameClick() {&#10;    setShowConfetti(true);&#10;    setRecycleConfetti(true);&#10;    setTimeout(() =&gt; setRecycleConfetti(false), 500);&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;space-y-2 text-center relative&quot;&gt;&#10;      {showConfetti &amp;&amp; (&#10;        &lt;Confetti&#10;          width={typeof window !== &quot;undefined&quot; ? window.innerWidth - 17 : 0}&#10;          height={typeof window !== &quot;undefined&quot; ? window.innerHeight + 100 : 0}&#10;          recycle={recycleConfetti}&#10;          numberOfPieces={100}&#10;        /&gt;&#10;      )}&#10;      &lt;h1&#10;        onClick={handleNameClick}&#10;        className=&quot;group relative font-bold tracking-tighter hover:tracking-normal transition-all text-6xl py-4 duration-1000 hover:cursor-pointer&quot;&#10;      &gt;&#10;        ryan zhang&#10;      &lt;/h1&gt;&#10;      &lt;div className=&quot;inline text-muted-foreground md:text-3xl text-center self-center tracking-tighter leading-relaxed&quot;&gt;&#10;        previous software engineer coop at{'  '}&#10;        &lt;Link&#10;          href=&quot;https://www.planview.com/&quot;&#10;          target=&quot;_blank&quot;&#10;          className=&quot;inline-block transition-all duration-100 font-bold bg-gradient-to-r from-pink-400 to-pink-600 bg-clip-text text-transparent hover:brightness-125 hover:cursor-pointer px-1 pl-0&quot;&#10;        &gt;&#10;          planview on copilot&#10;        &lt;/Link&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useEffect, useRef, useState } from &quot;react&quot;;&#10;import Confetti from &quot;react-confetti&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export default function Hero() {&#10;  const [recycleConfetti, setRecycleConfetti] = useState(false);&#10;  const [showConfetti, setShowConfetti] = useState(false);&#10;&#10;  function handleNameClick() {&#10;    setShowConfetti(true);&#10;    setRecycleConfetti(true);&#10;    setTimeout(() =&gt; setRecycleConfetti(false), 500);&#10;  }&#10;&#10;  // Carousel state&#10;  const transitionMs = 600;&#10;  const delayMs = 2500;&#10;  const itemRef = useRef&lt;HTMLDivElement | null&gt;(null);&#10;  const [itemHeight, setItemHeight] = useState(0);&#10;  const slides: Array&lt;JSX.Element&gt; = [&#10;    &lt;span key=&quot;planview&quot;&gt;&#10;      prev swe @{&quot; &quot;}&#10;      &lt;Link&#10;        href=&quot;https://www.planview.com/&quot;&#10;        target=&quot;_blank&quot;&#10;        className=&quot;inline-block transition-all duration-100 font-bold bg-gradient-to-r from-pink-400 to-pink-600 bg-clip-text text-transparent hover:brightness-125 hover:cursor-pointer px-1 pl-0&quot;&#10;      &gt;&#10;        planview on copilot&#10;      &lt;/Link&gt;&#10;    &lt;/span&gt;,&#10;    &lt;span key=&quot;ubc&quot;&gt;&#10;      3rd year cs student @{&quot; &quot;}&#10;      &lt;Link&#10;        href=&quot;https://www.ubc.ca/&quot;&#10;        target=&quot;_blank&quot;&#10;        className=&quot;inline-block transition-all duration-100 font-bold bg-gradient-to-r from-pink-400 to-pink-600 bg-clip-text text-transparent hover:brightness-125 hover:cursor-pointer px-1 pl-0&quot;&#10;      &gt;&#10;        ubc&#10;      &lt;/Link&gt;&#10;    &lt;/span&gt;,&#10;    &lt;span key=&quot;gamer&quot;&gt;gamer&lt;/span&gt;,&#10;    &lt;span key=&quot;video&quot;&gt;video editor&lt;/span&gt;,&#10;    &lt;span key=&quot;mech&quot;&gt;mechanical keyboard enthusiast&lt;/span&gt;,&#10;  ];&#10;  const extendedSlides = [...slides, slides[0]]; // clone first for seamless loop&#10;  const [index, setIndex] = useState(0);&#10;  const [enableTransition, setEnableTransition] = useState(true);&#10;&#10;  // Measure item height (responsive text size)&#10;  useEffect(() =&gt; {&#10;    const updateHeight = () =&gt; {&#10;      if (itemRef.current) setItemHeight(itemRef.current.offsetHeight);&#10;    };&#10;    updateHeight();&#10;    window.addEventListener(&quot;resize&quot;, updateHeight);&#10;    return () =&gt; window.removeEventListener(&quot;resize&quot;, updateHeight);&#10;  }, []);&#10;&#10;  // Auto-advance&#10;  useEffect(() =&gt; {&#10;    const id = setInterval(() =&gt; {&#10;      setEnableTransition(true);&#10;      setIndex((prev) =&gt; prev + 1);&#10;    }, delayMs);&#10;    return () =&gt; clearInterval(id);&#10;  }, []);&#10;&#10;  // Handle seamless reset when hitting the cloned last slide&#10;  useEffect(() =&gt; {&#10;    if (index === slides.length) {&#10;      const t = setTimeout(() =&gt; {&#10;        setEnableTransition(false); // jump without animation&#10;        setIndex(0);&#10;      }, transitionMs);&#10;      return () =&gt; clearTimeout(t);&#10;    } else {&#10;      // re-enable transition on other indices&#10;      setEnableTransition(true);&#10;    }&#10;  }, [index, slides.length]);&#10;&#10;  return (&#10;    &lt;div className=&quot;space-y-2 text-center relative&quot;&gt;&#10;      {showConfetti &amp;&amp; (&#10;        &lt;Confetti&#10;          width={typeof window !== &quot;undefined&quot; ? window.innerWidth - 17 : 0}&#10;          height={typeof window !== &quot;undefined&quot; ? window.innerHeight + 100 : 0}&#10;          recycle={recycleConfetti}&#10;          numberOfPieces={100}&#10;        /&gt;&#10;      )}&#10;      &lt;h1&#10;        onClick={handleNameClick}&#10;        className=&quot;group relative font-bold tracking-tighter hover:tracking-normal transition-all text-6xl py-4 duration-1000 hover:cursor-pointer&quot;&#10;      &gt;&#10;        ryan zhang&#10;      &lt;/h1&gt;&#10;&#10;      {/* Vertical carousel */}&#10;      &lt;div&#10;        className=&quot;inline-block text-muted-foreground md:text-3xl text-center self-center tracking-tighter leading-relaxed overflow-hidden&quot;&#10;        style={{ height: itemHeight || undefined }}&#10;      &gt;&#10;        &lt;div&#10;          style={{&#10;            transform: `translateY(-${index * (itemHeight || 0)}px)`,&#10;            transition: enableTransition&#10;              ? `transform ${transitionMs}ms ease-in-out`&#10;              : &quot;none&quot;,&#10;          }}&#10;          className=&quot;flex flex-col items-center&quot;&#10;        &gt;&#10;          {extendedSlides.map((node, i) =&gt; (&#10;            &lt;div key={i} ref={i === 0 ? itemRef : null} className=&quot;py-0&quot;&gt;&#10;              {node}&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/LinkCustom.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/LinkCustom.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;export default function LinkCustom({ href, label }: { href: string; label: string }) {&#10;  return (&#10;    &lt;a&#10;      href={href}&#10;      className=&quot;text-blue-700 md:text-xl sm:text-md flex-1 transition-all tracking-tighter hover:tracking-tight relative group&quot;&#10;      target=&quot;_blank&quot;&#10;      rel=&quot;noreferrer&quot;&#10;    &gt;&#10;      {label}&#10;      &lt;span className=&quot;block absolute bottom-0 left-0 w-0 h-[2px] bg-blue-500 transition-all duration-500 group-hover:w-full&quot;&gt;&lt;/span&gt;&#10;    &lt;/a&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/NavLink.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/NavLink.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;export default function NavLink({ href, label }: { href: string; label: string }) {&#10;  return (&#10;    &lt;a&#10;      href={href}&#10;      className=&quot;relative group tracking-tighter text-sm font-medium text-gray-900 transition-all hover:tracking-tight&quot;&#10;    &gt;&#10;      {label}&#10;      &lt;span className=&quot;block absolute bottom-0 left-0 w-0 h-[2px] bg-pink-200 transition-all duration-500 group-hover:w-full&quot;&gt;&lt;/span&gt;&#10;    &lt;/a&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/landing/Projects.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/landing/Projects.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import ProjectCard from &quot;@/components/ProjectCard&quot;;&#10;&#10;export default function Projects() {&#10;  return (&#10;    &lt;&gt;&#10;      &lt;h1 className=&quot;text-3xl font-extrabold tracking-tighter&quot;&gt;probably busy working on...&lt;/h1&gt;&#10;      &lt;div className=&quot;grid lg:grid-cols-[1fr_1fr] sm:grid-cols-1 items-stretch gap-4&quot;&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;noteblock&quot;}&#10;          date={&quot;june 2025 - present&quot;}&#10;          technologies={[&quot;Go&quot;, &quot;React&quot;, &quot;SQLite&quot;, &quot;Electron&quot;, &quot;Docker&quot;, &quot;Ollama&quot;]}&#10;          description={&quot;desktop note taking made intuitive&quot;}&#10;          githubLink={&quot;https://github.com/rzhang57/noteblock&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;planview copilot&quot;}&#10;          date={&quot;jan 2025 - present&quot;}&#10;          technologies={[&quot;React&quot;, &quot;Java Spring Boot&quot;, &quot;PostgreSQL&quot;, &quot;AWS&quot;, &quot;Docker&quot;]}&#10;          description={&quot;applied ai full stack engineering on the copilot team&quot;}&#10;          githubLink={&quot;https://www.planview.com/ai/&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;ride rater&quot;}&#10;          date={&quot;jul 2024 - oct 2024&quot;}&#10;          technologies={[&quot;React&quot;, &quot;Java Spring Boot&quot;, &quot;PostgreSQL&quot;, &quot;Docker&quot;]}&#10;          description={&quot;full stack app that allows real riders to rate rides at various amusement parks&quot;}&#10;          githubLink={&quot;https://github.com/rzhang57/riderater&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;kumon homework grader&quot;}&#10;          date={&quot;jun 2024 - aug 2024&quot;}&#10;          technologies={[&quot;Tensorflow&quot;, &quot;Keras&quot;, &quot;Flask&quot;, &quot;React&quot;, &quot;PostgreSQL&quot;, &quot;OpenCV&quot;]}&#10;          description={&quot;full-stack automated homework grading application built using opencv and keras handwriting model&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;ryanz.dev&quot;}&#10;          date={&quot;sept 2024 - present&quot;}&#10;          technologies={[&quot;Typescript&quot;, &quot;Next.js&quot;]}&#10;          description={&quot;all about me and what i'm working on&quot;}&#10;          githubLink={&quot;https://github.com/rzhang57/rmzhang-website&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;two-way braille/ english translator&quot;}&#10;          date={&quot;sept 2024&quot;}&#10;          technologies={[&quot;Python&quot;]}&#10;          description={&quot;cli program that translates braille to english and vice versa&quot;}&#10;          githubLink={&quot;https://github.com/rzhang57/eng-intern-challenge&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;exam preparer&quot;}&#10;          date={&quot;jan 2024 - apr 2024&quot;}&#10;          technologies={[&quot;Java&quot;, &quot;Java Swing&quot;, &quot;JUnit&quot;]}&#10;          description={&quot;desktop application that helps users prepare for exams by storing practice problems and notes&quot;}&#10;          githubLink={&quot;https://github.com/rzhang57/exam-preparer&quot;}&#10;        /&gt;&#10;        &lt;ProjectCard&#10;          title={&quot;robot&quot;}&#10;          date={&quot;sept 2018 - apr 2023&quot;}&#10;          technologies={[&quot;Java&quot;, &quot;Android Studio&quot;, &quot;Fusion 360&quot;]}&#10;          description={&quot;competition spec robot designed for FTC (first tech challenge) over the span of 4 years, winning 2 provincial titles, and 1 global award&quot;}&#10;          githubLink={&quot;https://ftc-events.firstinspires.org/team/16031&quot;}&#10;        /&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>